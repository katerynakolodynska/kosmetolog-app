import { Booking } from "../db/models/booking.js";
import { Service } from "../db/models/service.js";
import { sendPushNotification } from "./sendPush.js";
import mongoose from "mongoose";

export const sendReminderNotification = async () => {
  const now = new Date();
  const reminderTime = new Date(now.getTime() + 24 * 60 * 60 * 1000); // —á–µ—Ä–µ–∑ 24 –≥–æ–¥

  const targetDate = reminderTime.toISOString().split("T")[0];
  const targetHour =
    reminderTime.getHours().toString().padStart(2, "0") + ":00";

  console.log("üîî –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω—å –Ω–∞", targetDate, targetHour);

  const bookings = await Booking.find({
    date: targetDate,
    time: targetHour,
    playerId: { $exists: true },
  });

  for (const booking of bookings) {
    const service = await Service.findById(booking.service);
    if (!service || !booking.playerId) continue;

    const title = {
      pl: "Jutrzejsza wizyta",
      uk: "–ó–∞–≤—Ç—Ä–∞—à–Ω—ñ–π –∑–∞–ø–∏—Å",
      en: "Tomorrow's appointment",
    };

    const body = {
      pl: `Przypomnienie: '${service.title.pl}' jutro o ${booking.time}`,
      uk: `–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: '${service.title.uk}' –∑–∞–≤—Ç—Ä–∞ –æ ${booking.time}`,
      en: `Reminder: '${service.title.en}' tomorrow at ${booking.time}`,
    };

    try {
      await sendPushNotification(booking.playerId, title, body);
      console.log(`üì§ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–ª—è ${booking.phone}`);
    } catch (err) {
      console.warn("‚ùå –ü–æ–º–∏–ª–∫–∞ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:", err.message);
    }
  }
};
